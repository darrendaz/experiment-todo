{"version":3,"sources":["components/todoForm.js","components/todoList.js","App.js","index.js"],"names":["TodoForm","props","className","onSubmit","handleCreateTodoItem","htmlFor","type","id","placeholder","value","todoItem","onChange","handleItemNameChange","onClick","handleClearList","TodoList","todoList","handleListItemNameChange","handleDeleteTodoItem","toggleComplete","remainingCount","filter","listItem","completed","length","doneCount","map","key","name","bind","App","state","greeting","navList","todoItemIdCounter","handleTodoItemNameChange","this","setState","e","target","preventDefault","todoItemId","todoItemObj","prevState","itemIndex","findIndex","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.37a9a001.chunk.js","sourcesContent":["import React from \"react\"\n\nconst TodoForm = props => (\n  <div className=\"container-fluid\">\n    <form className=\"form-group\" onSubmit={props.handleCreateTodoItem}>\n      <div className=\"form-row\">\n        <label className=\"col-2 col-form-label\" htmlFor=\"todoItem\">\n          Add to your list\n        </label>\n      </div>\n      <div className=\"form-row\">\n        <input\n          type=\"text\"\n          className=\"form-control col-4\"\n          id=\"todoItem\"\n          placeholder=\"ex. grind coffee, submit PR, buy chocolate, repeat, etc.\"\n          value={props.todoItem}\n          onChange={props.handleItemNameChange}\n        />\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Add Item\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary\"\n          onClick={props.handleClearList}\n        >\n          Clear List\n        </button>\n      </div>\n    </form>\n  </div>\n)\n\nexport default TodoForm\n","import React from \"react\"\n\nconst TodoList = props => {\n  const {\n    todoList,\n    handleListItemNameChange,\n    handleDeleteTodoItem,\n    toggleComplete\n  } = props\n\n  const remainingCount = todoList.filter(\n    listItem => listItem.completed === false\n  ).length\n  const doneCount = todoList.filter(listItem => listItem.completed === true)\n    .length\n\n  return (\n    <div className=\"todolist-group container-fluid\">\n      <div className=\"row container-fluid\">\n        <div className=\"row container-fluid\">\n          {doneCount === 1\n            ? `${doneCount} thing done`\n            : `${doneCount} things done`}{\" \"}\n          /{\" \"}\n          {remainingCount === 1\n            ? `${remainingCount} thing to do`\n            : `${remainingCount} things to do`}\n        </div>\n      </div>\n      {todoList.map(todoItem => (\n        <div className=\"row container-fluid \" key={todoItem.id}>\n          <input\n            type=\"text\"\n            className=\"form-control col-6\"\n            id={todoItem.id}\n            value={todoItem.name}\n            onChange={handleListItemNameChange.bind(this)}\n          />\n          <button\n            type=\"button\"\n            className={\n              todoItem.completed\n                ? \"btn btn-success col-3\"\n                : \"btn btn-outline-success col-3\"\n            }\n            value={todoItem.id}\n            onClick={toggleComplete.bind(this, todoItem.id)}\n          >\n            {todoItem.completed ? `Completed` : `Complete Task`}\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary col-2\"\n            value={todoItem.id}\n            onClick={handleDeleteTodoItem.bind(this, todoItem.id)}\n          >\n            Delete\n          </button>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default TodoList\n","import React, { Component } from \"react\"\n// import Navigation from \"./components/navigation\"\nimport TodoForm from \"./components/todoForm\"\nimport TodoList from \"./components/todoList\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      greeting: \"To Do List\",\n      navList: [\"Todo List\", \"Calculator\", \"Weather Forecast\"],\n      todoItemIdCounter: 0,\n      todoItem: \"\",\n      todoList: []\n    }\n\n    this.handleTodoItemNameChange = this.handleTodoItemNameChange.bind(this)\n    this.handleCreateTodoItem = this.handleCreateTodoItem.bind(this)\n    this.handleClearList = this.handleClearList.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({\n      todoItem: \"\"\n    })\n  }\n\n  handleTodoItemNameChange(e) {\n    this.setState({\n      todoItem: e.target.value\n    })\n  }\n\n  handleListItemNameChange(e) {\n    const todoList = this.state.todoList\n    todoList[e.target.id - 1].name = e.target.value\n\n    this.setState({\n      todoList: todoList\n    })\n  }\n\n  handleCreateTodoItem(e) {\n    e.preventDefault()\n\n    const todoItemId = this.state.todoItemIdCounter + 1\n\n    const todoItemObj = {\n      id: todoItemId,\n      name: e.target.todoItem.value || \"<_empty_entry_>\",\n      completed: false\n    }\n\n    this.setState({\n      todoItem: \"\",\n      todoItemIdCounter: todoItemId,\n      todoList: [...this.state.todoList, todoItemObj]\n    })\n  }\n\n  handleDeleteTodoItem(id) {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.filter(todoItem => todoItem.id !== id)\n    }))\n  }\n\n  toggleComplete(id) {\n    const todoList = this.state.todoList\n    const itemIndex = todoList.findIndex(todoItem => todoItem.id === id)\n    const todoItemObj = todoList[itemIndex]\n\n    todoList[itemIndex] = { ...todoItemObj, completed: !todoItemObj.completed }\n\n    this.setState({ todoList: todoList })\n  }\n\n  handleClearList(e) {\n    e.preventDefault()\n\n    this.setState({\n      todoItemIdCounter: 0,\n      todoList: []\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <h1>{this.state.greeting}</h1>\n        {/* <Navigation navList={this.state.navList} /> */}\n        <TodoForm\n          todoItem={this.state.todoItem}\n          handleItemNameChange={this.handleTodoItemNameChange}\n          handleCreateTodoItem={this.handleCreateTodoItem}\n          handleClearList={this.handleClearList}\n        />\n        <TodoList\n          todoList={this.state.todoList}\n          handleListItemNameChange={this.handleListItemNameChange.bind(this)}\n          handleItemNameChange={this.handleTodoItemNameChange}\n          handleDeleteTodoItem={this.handleDeleteTodoItem.bind(this)}\n          toggleComplete={this.toggleComplete.bind(this)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.querySelector(\"#root\"))\n"],"sourceRoot":""}